before_all do |lane , options|
    ensure_git_branch
    ensure_git_status_clean
    git_pull
    puts "Run all lane with type #{options[:env]}"
end

platform :android do        
    desc 'Build the Android application.'
    lane :build do | options |
        gradle(
            task: "clean", 
            project_dir: 'android/',
            properties: {
                "defaultEnvFile" => ENV["ENVFILE"]
            }
        )
        versionCode = increment_version_code(
            gradle_file_path: "android/app/build.gradle",
        )
       
        gradle(
            task: "assemble",
            build_type: "Release",
            flavor: ENV["FLAVOR"],
            print_command: true,
            project_dir: 'android/',
            properties: {
                "defaultEnvFile" => ENV["ENVFILE"]
            }
        )
           
    end

    desc 'Build and upload to App Center.'
    lane :build_release do | options |
        build()
       
        # appcenter_upload(
        #     api_token: ENV["TEST_APPCENTER_API_TOKEN"],
        #     owner_name: ENV["TEST_APPCENTER_OWNER_NAME"],
        #     app_name: ENV["APPCENTER_APP_NAME"],
        #     apk: ENV["APPCENTER_DISTRIBUTE_APK"]
        # )
    end

     
end

platform :ios do
    desc 'Deploy ios'
    lane :deploy do | options |
        increment_build_number(xcodeproj: './ios/RN.xcodeproj')
        gym(scheme: ENV["FLAVOR"], project: './ios/name.xcodeproj')
        build_app(
            scheme: ENV["FLAVOR"],
            export_method: "app-store",
            export_options: {
                provisioningProfiles: { 
                "com.example.bundleid" => "Provisioning Profile Name",
                }
            }
        )
    end
end

 
after_all
    puts "Build success"
    git_commit(path: "*", message: "Fastlane commit to build")
    push_to_git_remote
end